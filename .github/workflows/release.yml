name: Publish Release

on:
  push:
    tags:
      - 'v*' # Trigger workflow on version tags (e.g., v1.0.0)

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        runtime: [win-x64, osx-x64, osx-arm64, linux-x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish for ${{ matrix.runtime }}
        run: |
          dotnet publish -c Release -r ${{ matrix.runtime }} --self-contained true \
              -p:PublishSingleFile=true \
              -p:IncludeAllContentForSelfExtract=true \
              -p:EnableCompressionInSingleFile=true \
              -p:DebugType=None \
              -o ./publish/${{ matrix.runtime }}
          # Rename the output file with version
          VERSION=$(grep "<Version>" *.csproj | sed -E 's|.*<Version>(.*)</Version>.*|\1|')
          if [ "${{ matrix.runtime }}" == "win-x64" ]; then
              mv ./publish/${{ matrix.runtime }}/DocumentBuilder.exe ./publish/${{ matrix.runtime }}/document-builder-$VERSION.exe
          else
              mv ./publish/${{ matrix.runtime }}/DocumentBuilder ./publish/${{ matrix.runtime }}/document-builder-$VERSION
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.runtime }}
          path: ./publish/${{ matrix.runtime }}

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME}" | sed 's/v//' >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            ## Changes in ${{ env.VERSION }}
            - Auto-generated release.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/${{ matrix.runtime }}
          asset_name: document-builder-${{ env.VERSION }}-${{ matrix.runtime }}
          asset_content_type: application/octet-stream